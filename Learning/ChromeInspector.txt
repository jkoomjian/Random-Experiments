* you can drag and drop elements around in the dom! Will be reflected in the page

* $0 to access selected element, $_ to reference the previous return value in the console

To write commands that span over multiple lines in the Console, press shift-enter.
let a = 2;
let b = 3;
a + b
> 5

You can set breakpoints on an XHR call
You can also right click on an element in elements panel and set breakpoint when the element or it's subtree is modified or an attribute is changed

console.log(domElem) writes domElem as it appears in the element inspector
console.dir(domElem) writes domElem as a JS object

There is an easy way to evaluate the time a js function takes:
console.time('My super slow method');
mySuperSlowMethod();
console.timeEnd('My super slow method')
----
> My super slow method: <time>

console.assert(a > b, {message: "a is not greater than b", a, b})

console.trace() //shows the stack trace at the point it is called

$0 â€“ $4 commands reference to the last five DOM elements inspected.
$_ returns the value of the latest evaluated expression.
$(selector) returns the reference to the first DOM element with the specified selector (document.querySelector())
$$(selector) Returns an array of all the elements that match the specified selector (document.querySelectorAll())
$x(path) returns an array of DOM elements that match the given XPath expression.
